# ماتریس مجاورت یک گراف را تعریف می‌کنیم.
# این ماتریس باید یک مربع (n*n) باشد.
# 1 یعنی راه دارد، 0 یعنی راه ندارد.
adjacency_matrix = [
    [0, 1, 0, 0],
    [1, 0, 1, 0],
    [0, 1, 0, 1],
    [0, 0, 1, 0]
]

# تعداد نقاط در گراف (تعداد سطرها یا ستون‌ها)
num_nodes = len(adjacency_matrix)

# یک لیست برای نگهداری نقاطی که به آن‌ها رسیده‌ایم
# در ابتدا، فقط به نقطه اول (نقطه 0) رسیده‌ایم.
reached_nodes = {0} # با یک مجموعه (set) کار می‌کنیم که راحت‌تر است

# یک صف برای نگهداری نقاطی که باید بررسی شوند
# ابتدا فقط نقطه شروع را در صف قرار می‌دهیم.
queue = [0]

# تا زمانی که صف خالی نشده، ادامه می‌دهیم
while queue:
    # یک نقطه را از صف برمی‌داریم
    current_node = queue.pop(0)

    # همسایه‌های این نقطه را بررسی می‌کنیم
    for neighbor in range(num_nodes):
        # اگر راهی از نقطه فعلی به همسایه وجود داشت (یعنی 1 بود)
        # و هنوز به این همسایه نرسیده‌ایم...
        if adjacency_matrix[current_node][neighbor] == 1 and neighbor not in reached_nodes:
            # همسایه را به لیست نقاطی که به آن‌ها رسیده‌ایم اضافه می‌کنیم
            reached_nodes.add(neighbor)
            # و آن را به صف اضافه می‌کنیم تا بعداً همسایه‌های آن را بررسی کنیم
            queue.append(neighbor)

# در نهایت، بررسی می‌کنیم که آیا تعداد نقاطی که به آن‌ها رسیده‌ایم،
# با تعداد کل نقاط گراف برابر است؟
if len(reached_nodes) == num_nodes:
    print("Graph in Hamband.")
else:
    print("Graph is not Hamband.")

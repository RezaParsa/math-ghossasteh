رکیب RoS چیست؟ 🧐
RoS به ما می‌گوید که اگر از یک نقطه به نقطه دیگر در رابطه S و سپس از آن نقطه به نقطه بعدی در رابطه R راهی وجود داشته باشد، در نهایت یک راه مستقیم از نقطه اول به نقطه آخر در RoS وجود خواهد داشت.

برای محاسبه RoS، ما از همان قوانینی استفاده می‌کنیم که در ضرب بولی ماتریس‌ها به کار بردیم:

برای ضرب، از عملگر منطقی AND استفاده می‌کنیم.

برای جمع، از عملگر منطقی OR استفاده می‌کنیم





قدم به قدم کد 🚶‍♂️
تعریف ماتریس‌ها:

r_matrix و s_matrix دو جدول (ماتریس) هستند که رابطه‌های R و S را نشان می‌دهند.

بررسی ابعاد:

برای اینکه بتوانیم RoS را محاسبه کنیم، باید تعداد ستون‌های ماتریس S با تعداد سطرهای ماتریس R برابر باشد. در کد، این شرط با if cols_s != rows_r: بررسی می‌شود. اگر ابعاد مناسب نبود، برنامه یک پیام خطا نمایش می‌دهد و متوقف می‌شود.

ساخت ماتریس RoS:

ros_matrix = []: یک لیست خالی می‌سازیم تا نتیجه ترکیب را در آن قرار دهیم.

حلقه‌های اصلی:

سه حلقه تودرتو وجود دارد:

حلقه اول (x) برای سطر‌های ماتریس R.

حلقه دوم (y) برای ستون‌های ماتریس S.

حلقه سوم (z) برای انجام عملیات اصلی ترکیب.

در داخل حلقه سوم، کد بررسی می‌کند که آیا از یک نقطه میانی (z) می‌توان از S به y و از R به x رسید؟ اگر هر دو شرط برقرار بود، یعنی یک مسیر ترکیبی وجود دارد.

محاسبه و ذخیره نتیجه:

if s_matrix[z][y] == 1 and r_matrix[x][z] == 1:: این شرط جادویی، وجود یک مسیر ترکیبی را بررسی می‌کند. اگر درست بود، cell_value را برابر 1 قرار می‌دهیم و از حلقه z خارج می‌شویم.

در نهایت، cell_value را به سطر جدید اضافه می‌کنیم.

چاپ نتیجه:

در آخر، ماتریس ros_matrix که نتیجه نهایی ترکیب است، چاپ می‌شود.